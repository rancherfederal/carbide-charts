proxy:
  imagePullPolicy: IfNotPresent
  image:
    name: carbide/heimdall-proxy
    tag: "0.1.0"
  port: 8080
  service:
    type: ClusterIP
    port: 80
postgres:
  image:
    name: carbide/postgres
    tag: "13"
  imagePullPolicy: IfNotPresent
  port: 5432
  service:
    type: ClusterIP
    port: 5432
  persistence:
    enabled: true
    persistentVolumeClaim: ""
    storageClassName: ""
    storageRequest: 10Gi
    accessMode: ReadWriteOnce
  user: heimdall
  password: heimdall
  podAnnotations: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  affinity: {}
  tolrations: {}
heimdall:
  # A list of permissions a user must have in order to authenticate to Heimdall
  # This is a list of group,resource,namespace,verb strings
  # All must evaluate to allowed in order for auth to occur.
  #
  # e.g. default is a user required to have LIST perms on Scans 
  # (from the compliance.cattle.io group) (no namespace specified as it's a cluster-scoped resource)
  kubernetesRequiredPermissions:
    - compliance.cattle.io,scans,,list
  paths:
    # ONLY SET THESE VALUES IF YOU KNOW WHAT YOU ARE DOING
    # These are necessary for correct Heimdall operation
    # and are auto-detected in normal situations. 
    public: ""
    vue: ""
    router: ""
    axios: ""
  rcidf: # rancher-cluster-id-finder
    name: carbide/rcidf
    tag: "0.1.0"
  databaseName: "heimdall"
  # repository: mitre/heimdall2
  # tag: 2.6.32
  image:
    name: carbide/heimdall2
    tag: "0.1.0"
    path: 0.1.0
  port: 8080
  service:
    type: ClusterIP
    port: 80
  jwtExpireTime: 1d
  fleetNamespace: cattle-fleet-system
  rancherNamespace: cattle-system
  localLoginDisabled: true
  # secret as in "secret value" not k8s secret
  # default is randAlphaNum 32
  apiKeySecret: ""
  # secret as in "secret value" not k8s secret
  # default is randAlphaNum 32
  jwtSecret: ""
  nodeEnv: "production" # leave it to this
  adminEmail: "admin@heimdall.local"
  # default is randomly generated
  # and available in pod logs after server init
  adminPassword: ""
  podAnnotations: {}
  selectorLabels: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
global:
  cattle:
    systemDefaultRegistry: "rgcrprod.azurecr.us"
