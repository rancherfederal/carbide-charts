apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "heimdall.fullname" . }}
  labels:
    {{- include "heimdall.labels" . | nindent 4 }}
    app.kubernetes.io/component: heimdall
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "heimdall.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: heimdall
  template:
    metadata:
      {{- with .Values.heimdall.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "heimdall.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: heimdall
    spec:
      serviceAccountName: {{ include "heimdall.fullname" . }}-sa
      {{- with .Values.heimdall.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsUser: 1000
      containers:
        - name: heimdall
          securityContext:
            {{- toYaml .Values.heimdall.securityContext | nindent 12 }}
          image: "{{ template "system_default_registry" . }}{{ .Values.heimdall.image.name }}:{{ .Values.heimdall.image.tag | default .Chart.AppVersion }}"
          ports:
            - containerPort: {{ .Values.heimdall.port }}
              name: http
              protocol: TCP
          env:
            - name: PORT
              value: {{ .Values.heimdall.port | quote }}
            - name: DATABASE_HOST
              value: {{ include "heimdall.fullname" . }}-postgresql
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_NAME
              value: {{ .Values.heimdall.databaseName | default "heimdall" }}
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                    key: databaseUsername
                    name: {{ include "heimdall.fullname" . }}-secret
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: databasePassword
                  name: {{ include "heimdall.fullname" . }}-secret
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  key: jwt
                  name: {{ include "heimdall.fullname" . }}-secret
            - name: JWT_EXPIRE_TIME
              value: {{ .Values.heimdall.jwtExpireTime }}
            - name: API_KEY_SECRET
              valueFrom:
                secretKeyRef:
                  key: api
                  name: {{ include "heimdall.fullname" . }}-secret
            - name: NODE_ENV
              value: {{ .Values.heimdall.nodeEnv }}
            - name: ADMIN_EMAIL
              value: {{ .Values.heimdall.adminEmail | default "admin@heimdall.local" }}
            - name: ADMIN_PASSWORD
              value: {{ .Values.heimdall.adminPassword }}
            - name: EXTERNAL_URL
              value: "compliance-operator.cattle.io"
            - name: APP_HEIMDALL_NAMESPACE
              value: carbide-stigatron-system
            - name: APP_HEIMDALL_PROXY_SERVICE
              value: heimdall-proxy
            - name: APP_HEIMDALL_PROXY_PORT
              value: {{ .Values.proxy.service.port | quote }}
            - name: K8S_PERMS
              value: {{ join ";" .Values.heimdall.kubernetesRequiredPermissions | quote | default "compliance.cattle.io,scans,,list" }}
            - name: LOCAL_LOGIN_DISABLED
              value: {{ .Values.heimdall.localLoginDisabled | quote | default "true" }}
            {{- if .Values.heimdall.paths.public }}
            - name: PUBLIC_PATH
              value: {{ .Values.heimdall.paths.public }}
            {{- end }}
            {{- if .Values.heimdall.paths.vue }}
            - name: VUE_PUBLIC_PATH
              value: {{ .Values.heimdall.paths.vue }}
            {{- end }}
            {{- if .Values.heimdall.paths.router }}
            - name: ROUTER_BASE_PATH
              value: {{ .Values.heimdall.paths.router }}
            {{- end }}
            {{- if .Values.heimdall.paths.axios }}
            - name: AXIOS_BASE_URL
              value: {{ .Values.heimdall.paths.axios }}
            {{- end}}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.heimdall.port }}
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.heimdall.port }}
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 15
            failureThreshold: 3
          volumeMounts:
          - mountPath: /rancher
            name: rcidf
      initContainers:
        - name: rancher-cluster-id-finder
          image: {{ template "system_default_registry" . }}{{ .Values.heimdall.rcidf.name }}:{{ .Values.heimdall.rcidf.tag }}
          command: ['./rcidf', '--write-file', '/rancher/id', 'id']
          volumeMounts:
          - mountPath: /rancher
            name: rcidf
        - name: rancher-url-finder
          image: {{ template "system_default_registry" . }}{{ .Values.heimdall.rcidf.name }}:{{ .Values.heimdall.rcidf.tag }}
          command: ['./rcidf', '--write-file', '/rancher/url', 'url']
          volumeMounts:
          - mountPath: /rancher
            name: rcidf
      volumes:
      - name: rcidf
        emptyDir:
          sizeLimit: 1Mi
      {{- with .Values.heimdall.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.heimdall.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.heimdall.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always