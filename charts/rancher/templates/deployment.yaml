{{- if .Values.ingress.enabled }}
{{- if or (.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress") (not (.Capabilities.APIVersions.Has "networking.k8s.io/v1beta1/Ingress")) }}
apiVersion: networking.k8s.io/v1
{{- else }}
apiVersion: networking.k8s.io/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ template "rancher.fullname" . }}
  labels:
{{ include "rancher.labels" . | indent 4 }}
<<<<<<< rancher/2.10.7
spec:
{{- if (gt (int .Values.replicas) 0) }}
  replicas: {{ .Values.replicas }}
{{- end  }}
  selector:
    matchLabels:
      app: {{ template "rancher.fullname" . }}
  strategy:
    rollingUpdate:
      maxSurge: 1
{{- if (eq (int .Values.replicas) 1) }}
      maxUnavailable: 0
{{- else }}
      maxUnavailable: 1
{{- end }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "rancher.fullname" . }}
        release: {{ .Release.Name }}
    spec:
{{- if .Values.carbide.whitelabel.enabled }}
      initContainers:
        - name: copy
          image: {{ .Values.carbide.whitelabel.image }}:{{ .Values.carbide.whitelabel.tag }}
          imagePullPolicy: Always
          command:  ["/bin/sh", "-c", "cp -rf /tmp/assets/* /rancher-images/"]
          volumeMounts:
          - name: work-dir
            mountPath: /rancher-images/
{{- end }}
      priorityClassName: {{ .Values.priorityClassName }}
      serviceAccountName: {{ template "rancher.fullname" . }}
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 6 }}
{{- end }}
      affinity:
        podAntiAffinity:
{{- if eq .Values.antiAffinity "required" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ template "rancher.fullname" . }}
            topologyKey: {{ .Values.topologyKey | default "kubernetes.io/hostname" }}
{{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "rancher.fullname" . }}
              topologyKey: {{ .Values.topologyKey | default "kubernetes.io/hostname" }}
{{- end }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions: {{ include "linux-node-selector-terms" . | nindent 16 }}
              {{- if .Values.extraNodeSelectorTerms }}
              {{- toYaml .Values.extraNodeSelectorTerms | nindent 16 }}
              {{- end }}
      tolerations: {{ include "linux-node-tolerations" . | nindent 8 }}
      {{- if .Values.extraTolerations }}
      {{- toYaml .Values.extraTolerations | nindent 8 }}
      {{- end }}
      containers:
      - image: {{ .Values.rancherImage }}:{{ default .Chart.AppVersion .Values.rancherImageTag }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.rancherImagePullPolicy }}
        name: {{ template "rancher.name" . }}
        ports:
        - containerPort: 80
          protocol: TCP
{{- if (and .Values.hostPort (gt (int .Values.hostPort) 0)) }}
        - containerPort: 444
          hostPort: {{ int .Values.hostPort }}
          protocol: TCP
{{- end}}
        args:
{{- if .Values.debug }}
        - "--debug"
=======
  annotations:
{{- if .Values.ingress.configurationSnippet }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      {{- template "configurationSnippet" . }}
>>>>>>> main
{{- end }}
{{- if eq .Values.tls "external" }}
    nginx.ingress.kubernetes.io/ssl-redirect: "false" # turn off ssl redirect for external.
{{- else }}
<<<<<<< rancher/2.10.7
        # Public trusted CA - clear ca certs
        - "--no-cacerts"
{{- end }}
        - "--http-listen-port=80"
        - "--https-listen-port=443"
        - "--add-local={{ .Values.addLocal }}"
        env:
        - name: CATTLE_NAMESPACE
          value: {{ .Release.Namespace }}
        - name: CATTLE_PEER_SERVICE
          value: {{ template "rancher.fullname" . }}
{{- if .Values.carbide.whitelabel.enabled }}
        - name: CATTLE_BASE_UI_BRAND
          value: "rancher"
{{- end }}
{{- if .Values.features }}
        - name: CATTLE_FEATURES
          value: "{{ .Values.features }}"
{{- end}}
{{- if .Values.noDefaultAdmin }}
        - name: CATTLE_NO_DEFAULT_ADMIN
          value: "{{ .Values.noDefaultAdmin }}"
{{- end}}
{{- if gt (int .Values.auditLog.level) 0 }}
        - name: AUDIT_LEVEL
          value: {{ .Values.auditLog.level | quote }}
        - name: AUDIT_LOG_MAXAGE
          value: {{ .Values.auditLog.maxAge | quote }}
        - name: AUDIT_LOG_MAXBACKUP
          value: {{ .Values.auditLog.maxBackup | quote }}
        - name: AUDIT_LOG_MAXSIZE
          value: {{ .Values.auditLog.maxSize | quote }}
{{- end }}
{{- if .Values.proxy }}
        - name: HTTP_PROXY
          value: {{ .Values.proxy }}
        - name: HTTPS_PROXY
          value: {{ .Values.proxy }}
        - name: NO_PROXY
          value: {{ .Values.noProxy }}
{{- end }}
{{- if .Values.systemDefaultRegistry }}
        - name: CATTLE_SYSTEM_DEFAULT_REGISTRY
          value: {{ .Values.systemDefaultRegistry }}
{{- end }}
{{- if .Values.useBundledSystemChart }}
        - name: CATTLE_SYSTEM_CATALOG
          value: bundled
{{- end }}
{{- if .Values.restrictedAdmin }}
        - name: CATTLE_RESTRICTED_DEFAULT_ADMIN
          value: "true"
{{- end}}
{{- if .Values.bootstrapPassword }}
        - name: CATTLE_BOOTSTRAP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "bootstrap-secret"
              key: "bootstrapPassword"
=======
  {{- if ne .Values.ingress.tls.source "secret" }}
    {{- $certmanagerVer :=  split "." .Values.certmanager.version -}}
    {{- if or (.Capabilities.APIVersions.Has "certmanager.k8s.io/v1alpha1") (and (gt (len $certmanagerVer._0) 0) (eq (int $certmanagerVer._0) 0) (lt (int $certmanagerVer._1) 11)) }}
    certmanager.k8s.io/issuer: {{ template "rancher.fullname" . }}
    {{- else }}
    cert-manager.io/issuer: {{ template "rancher.fullname" . }}
    cert-manager.io/issuer-kind: Issuer
    {{- end }}
  {{- end }}
>>>>>>> main
{{- end }}
{{- if .Values.ingress.includeDefaultExtraAnnotations }}
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
{{- end }}
<<<<<<< rancher/2.10.7
{{- if .Values.extraEnv }}
{{ toYaml .Values.extraEnv | indent 8}}
=======
{{- if .Values.ingress.extraAnnotations }}
{{ toYaml .Values.ingress.extraAnnotations | indent 4 }}
>>>>>>> main
{{- end }}
spec:
{{- if .Values.ingress.ingressClassName }}
  ingressClassName: {{ .Values.ingress.ingressClassName }}
{{- end }}
  rules:
  - host: {{ .Values.hostname }}  # hostname to access rancher server
    http:
      paths:
      - backend:
          {{- if or (.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress") (not (.Capabilities.APIVersions.Has "networking.k8s.io/v1beta1/Ingress")) }}
          service:
            name: {{ template "rancher.fullname" . }}
            port:
              number: {{ .Values.ingress.servicePort }}
          {{- else }}
          serviceName: {{ template "rancher.fullname" . }}
          servicePort: {{ .Values.ingress.servicePort }}
          {{- end }}
        {{- if or (.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress") (not (.Capabilities.APIVersions.Has "networking.k8s.io/v1beta1/Ingress")) }}
        pathType: {{ .Values.ingress.pathType }}
        path: {{ .Values.ingress.path }}
        {{- end }}
{{- if eq .Values.tls "ingress" }}
  tls:
  - hosts:
    - {{ .Values.hostname }}
    secretName: {{ .Values.ingress.tls.secretName }}
{{- end }}
{{- end }}